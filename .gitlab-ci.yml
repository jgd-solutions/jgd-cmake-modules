stages:
  - environment
  - docker-build
  - build

variables:
  DOCKER_DRIVER: overlay2
  IMG_TAG: $CI_COMMIT_BRANCH
  GIT_SUBMODULE_STRATEGY: recursive

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
      variables:
        IMG_TAG: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        IMG_TAG: latest
    - when: always

ci-env:
  stage: environment
  script:
    - echo "=== GitLab CI/CD | All Environment Variables ==="
    - env | tee env_vars.sh
  artifacts:
    paths:
      - env_vars.sh

.image_builder:
  needs: []
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
  stage: docker-build
  when: on_success
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json

docker-build-alpine-amd64:
  extends: .image_builder
  rules:
    - !reference [.image_builder, rules]
    - changes:
        - .gitlab/ci-dockerfiles/alpine-amd64
      when: always
  script:
    - IMG_NAME="$CI_REGISTRY_IMAGE/alpine-amd64:$IMG_TAG" && echo "Building image $IMG_NAME"
    - >-
      /kaniko/executor
      --context "$CI_PROJECT_DIR/.gitlab/ci-dockerfiles/alpine-amd64"
      --destination "$IMG_NAME"

build-alpine-amd64:
  stage: build
  needs:
    - job: docker-build-alpine-amd64
      optional: true
  image:
    name: $CI_REGISTRY_IMAGE/alpine-amd64:$IMG_TAG
    entrypoint: [""]
  script:
    - cmake -DJCM_BUILD_TESTS=ON -S . -B build -G Ninja
    - ctest --output-on-failure --test-dir build
